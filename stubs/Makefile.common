# Common Makefile for GNAT for LLVM
# Copyright (C) 2006-2017, AdaCore

ifeq ($(OS),Windows_NT)
  LN=cp -p
  DIRSEP=\\\\
else
  LN=ln -s
  DIRSEP=/
endif

MKDIR=mkdir -p
RMDIR=rm -rf
CP=cp -p
MV=mv
PATCH=patch
SHELL=bash

target         := $(shell pwd)
src            := $(target)/..
stubs          := $(src)/stubs
gnatlib        := $(target)/gnatlib
gnatlib_common := $(src)/llvm-backend/gnatlib
obj            := $(target)/obj
bin            := $(target)/bin
lib            := $(target)/lib/$(LIBDIR)
llvm_ada       := $(src)/llvm-ada
llvm_build     := $(src)/llvm-ada/llvm-obj
llvm_bindings  := $(llvm_ada)/include

LLVM_MODULES = Core Analysis BitWriter Target

ifdef USE_GNATCOV
GNATCOV_FLAGS=-O0 -g -fdump-scos -fpreserve-control-flow
else
GNATCOV_FLAGS=
endif

CC=gcc
GNATMAKE=gnatmake
CFLAGS=-g -O0 $(GNATCOV_FLAGS)
ADAFLAGS=-gnatpg -gnata -gnatyI
LIBFLAGS=-gnatpg -gnatyI
MARGS=-m -j0
LARGS=-largs \
  gcc_missing.o targext.o \
  $(shell $(llvm_build)/bin/llvm-config --libs $(LLVM_MODULES) \
    --ldflags --system-libs) -lstdc++

###################
# general targets #
###################

.PHONY: force bin gnatlib tools

all: bin

bin:
	$(MAKE) setup
	$(MAKE) gnatcompile
	$(MAKE) tools

clean:
	$(RM) $(obj)/*.o
	$(RM) $(obj)/*.ali
	$(RM) $(obj)/b~*.*
	$(RM) $(obj)/*.ad?
	$(RM) $(obj)/xnmake* $(obj)/xtreeprs*
	$(RM) $(bin)/llvm-*
	$(RM) $(lib)/adainclude/*.ad?
	$(RM) $(lib)/adalib/*.ali
	$(RMDIR) $(lib)/rts-*

##############
# host tools #
##############

# get adainclude path, protecting potential trailing backslashes
adainclude := $(strip $(shell gnatls -v | grep adainclude |sort -u | sed -e 's/\\/\//g'))

vpath %.o $(obj)

GNAT_SRC=$(src)/gnat_src

INCLUDES  =-I$(target) -I$(stubs) -I$(adainclude) -I$(GNAT_SRC) \
    -I$(llvm_bindings)
HOST_FLAGS=$(INCLUDES) $(CFLAGS) $(ADAFLAGS)
HOST_MAKE =$(GNATMAKE) $(MARGS) $(HOST_FLAGS) $(LARGS) -margs

TOOLS1=gnatmake gnatbind gnatlink \
  gnatchop gnatkr gnatls gnatprep gnatxref gnatfind gnatname gnatclean
TOOLS=$(TOOLS1) gnatcmd gcc $(EXTRA_TOOLS)

C_OBJS=gcc_missing.o targext.o

gnatcompile: bldtools cfiles
	cd $(obj); $(HOST_MAKE) gnat1drv -o $(bin)/$(GNATCOMPILE)

cfiles: $(C_OBJS)

gcc_missing.o: $(stubs)/gcc_missing.c
	$(CC) -c $(CFLAGS) $< -o $(obj)/$@

targext.o: $(stubs)/targext.c
	$(CC) -c $(CFLAGS) $< -o $(obj)/$@

tools: cfiles $(TOOLS)

$(TOOLS1): force
	cd $(obj); $(HOST_MAKE) $@ -o $(bin)/$(TOOLS_PREFIX)$@

gcc: force
	cd $(obj); $(HOST_MAKE) gcc_wrapper -o $(bin)/$(TOOLS_PREFIX)$@

gnatcmd: force
	cd $(obj); $(HOST_MAKE) $@ -o $(bin)/$(TOOLS_PREFIX)$(GNATCMD)

setup:
	$(MAKE) dirs
	$(MAKE) bldtools

dirs: sanity-check
	$(MKDIR) $(obj) $(bin) $(lib)

bldtools: $(obj)/sinfo.ads $(obj)/treeprs.adt $(obj)/nmake.adt $(obj)/gnatvsn.ads $(obj)/snames.ads $(obj)/get_targ.adb
	cd $(obj); $(GNATMAKE) -q $(INCLUDES) xtreeprs xnmake; ./xtreeprs; ./xnmake

$(obj)/snames.ads: $(GNAT_SRC)/snames.ads-tmpl $(GNAT_SRC)/snames.adb-tmpl $(GNAT_SRC)/snames.h-tmpl
	-$(RM) $(obj)/*-tmpl
	$(LN) $^ $(obj)
	cd $(obj) && $(GNATMAKE) -q $(INCLUDES) xsnamest && ./xsnamest && $(MV) snames.ns snames.ads && $(MV) snames.nb snames.adb

$(obj)/sinfo.ads: $(GNAT_SRC)/sinfo.ads
	@$(LN) $< $@

$(obj)/treeprs.adt: $(GNAT_SRC)/treeprs.adt
	@$(LN) $< $@

$(obj)/nmake.adt: $(GNAT_SRC)/nmake.adt
	@$(LN) $< $@

$(obj)/get_targ.adb: $(GNAT_SRC)/ada_get_targ.adb
	@$(LN) $< $@

$(obj)/gnatvsn.ads: $(GNAT_SRC)/gnatvsn.ads
	sed -e 's/(\([0-9][0-9]*\)-[1-9][0-9])/(\1)/' $< > $@

