------------------------------------------------------------------------------
--                              C C G                                       --
--                                                                          --
--                     Copyright (C) 2020-2021, AdaCore                     --
--                                                                          --
-- This is free software;  you can redistribute it  and/or modify it  under --
-- terms of the  GNU General Public License as published  by the Free Soft- --
-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
-- sion.  This software is distributed in the hope  that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License for  more details.  You should have  received  a copy of the GNU --
-- General  Public  License  distributed  with  this  software;   see  file --
-- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --
-- of the license.                                                          --
------------------------------------------------------------------------------

with Interfaces.C;

with LLVM.Types; use LLVM.Types;

with Namet; use Namet;
with Types; use Types;

with GNATLLVM; use GNATLLVM;

package CCG is

   subtype unsigned is Interfaces.C.unsigned;

   --  This package and its children generate C code from the LLVM IR
   --  generated by GNAT LLLVM.

   procedure Initialize_C_Writing;
   --  Do any initialization needed to write C.  This is always called after
   --  we've obtained target parameters.

   procedure Write_C_Code (Module : Module_T);
   --  The main procedure, which generates C code from the LLVM IR

   procedure C_Set_Field_Name_Info
     (SID         : Struct_Id;
      Idx         : Nat;
      Name        : Name_Id := No_Name;
      Is_Padding  : Boolean := False;
      Is_Bitfield : Boolean := False);
   --  Say what field Idx in the struct temporarily denoted by SID is used for

   procedure C_Set_Struct (SID : Struct_Id; T : Type_T)
     with Pre => Present (T), Inline;
   --  Indicate that the previous calls to Set_Field_Name_Info for SID
   --  were for LLVM struct type T.

   procedure C_Set_Is_Unsigned (V : Value_T)
     with Pre => Present (V), Inline;
   --  Indicate that V has an unsigned type.

   procedure C_Set_Is_Variable (V : Value_T)
     with Pre => Present (V), Inline;
   --  Indicate that V is variable found in the source

   procedure Error_Msg (Msg : String);
   --  Post an error message via the GNAT errout mechanism.
   --  ??? For now, default to the First_Source_Ptr sloc. Will hopefully use a
   --  better source location in the future when we keep track of them for e.g.
   --  generating #line information.

   --  Define the sizes of all the basic C types.

   Char_Size      : Pos;
   Short_Size     : Pos;
   Int_Size       : Pos;
   Long_Size      : Pos;
   Long_Long_Size : Pos;

   Emit_C_Line    : Boolean := False;
   --  When generating C code, indicates that we want to generate #line
   --  directives. This corresponds to -g.

end CCG;
